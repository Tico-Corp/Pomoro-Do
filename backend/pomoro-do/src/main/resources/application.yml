server:
  port: 8080 #애플리케이션 서버 포트번호 설정 (8080 포트에서 수신 대기하도록 설정)

spring:
  application:
    name: pomoro-do! # 애플리케이션의 이름 설정
  jackson:
    time-zone: Asia/Seoul # JSON 처리 시 사용할 시간대를 'Asia/Seoul'로 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver # MySQL JDBC 드라이버 클래스명 설정
    url: jdbc:mysql://pomorodo.shop:3306/pomorodo?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul # 데이터베이스 URL을 설정 (호스트, 포트, 데이터베이스 이름, 추가 옵션 포함)
    username: admin # 데이터베이스 접속을 위한 사용자 이름 설정
    password: pomorodo@0517 # 데이터베이스 접속을 위한 비밀번호 설정
  jpa:
    database: mysql # 사용할 데이터베이스 유형을 MySQL로 설정
    database-platform: org.hibernate.dialect.MySQLDialect # Hibernate가 사용할 SQL 방언을 MySQLDialect로 설정
    hibernate:
      ddl-auto: update # 데이터베이스 스키마 자동 업데이트 정책 설정 (create: 기존 테이블 삭제 후 생성 / update: 애플리케이션 시작 시 데이터베이스 스키마를 최신 상태로 유지)
    properties:
      hibernate:
        show-sql: true # SQL 쿼리를 콘솔에 출력
        format_sql: true # SQL 쿼리의 가독성을 높여 출력

logging:
  level:
    com.tico.pomoro_do: DEBUG # 'com.tico.pomoro_do' 패키지의 로깅 레벨을 DEBUG로 설정하여 상세한 정보 로깅
    org.hibernate.SQL: debug # Hibernate가 생성하는 SQL 쿼리를 디버그 레벨에서 로깅
    org.hibernate.type: trace # SQL 쿼리 실행 시 사용되는 파라미터 값을 트레이스 레벨에서 로깅하여 최대한 상세한 정보 제공

# jwt 토큰 설정
jwt:
  secret-key: xlzhdmlvhahfhentjqltmdlqslekckehfdlrnfmadlahzkzjvlWkdWkdrnldudnj
  access-token:
    expire-length: 3600000 # 1시간
  refresh-token:
    expire-length: 86400000 # 24시간
